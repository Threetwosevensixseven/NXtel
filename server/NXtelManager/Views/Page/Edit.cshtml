@model NXtelManager.Models.PageEditModel
@{
    var page = Model.Page;
    ViewBag.Title = "Edit Page";
    string pageID = @page.PageID <= 0 ? "NEW" : @page.PageID.ToString();
    string pageNo = @page.PageID <= 0 ? "" : @page.PageNo.ToString();
    string frame = @page.PageID <= 0 ? "" : @page.Frame;
}
<h2>@ViewBag.Title</h2>
<h3>@ViewBag.Message</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <table id="tblEdit" class="edit">
        <tbody>
            <tr>
                <td class="lbl">Page ID:</td>
                <td class="data" colspan="5">@pageID@Html.Hidden("PageID", @page.PageID)</td>
            </tr>
            <tr>
                <td class="lbl">Title:</td>
                <td class="data" colspan="5">@Html.TextBox("Title", page.Title, new { maxlength = 30, style = "width:100%;max-width:initial" })</td>
            </tr>
            <tr>
                <td class="lbl">Page No:</td>
                <td class="data">@Html.TextBox("PageNo", pageNo, new { maxlength = 10 })</td>
            </tr>
            <tr>
                <td class="lbl">Frame:</td>
                <td class="data">@Html.TextBox("Frame", frame, new { maxlength = 1, style = "text-transform:lowercase" })</td>
            </tr>
            <tr>
                <td class="lbl">Box Mode:</td>
                <td class="data">@Html.CheckBox("BoxMode", page.BoxMode)</td>
            </tr>
            <tr>
                <td class="lbl">URL:</td>
                <td class="data">@Html.TextArea("URL", page.URL)</td>
            </tr>
            <tr>
                <td class="lbl" style="vertical-align:top">Content:</td>
                <td class="data">
                    <div id="canvasframePreview" style="float:left">
                        <canvas id="framePreview" width="960" height="1000" style="width: 576px; height: 500px;"></canvas>
                    </div>
                    <a id="EditContent" href="#" class="ordered ordered-btn edit" onclick="launchEditor();return false;"
                       style="display:inline-block;margin:4px;float:left;display:none" title="Edit page content">Edit</a>
                </td>
            </tr>
            <tr>
                <td class="lbl" style="vertical-align:top">Templates:</td>
                <td id="PageTemplates" class="data">
                    @Html.Hidden("SelectedTemplates", page.SelectedTemplates)
                    <table style="display:inline">
                        <tbody id="tbodyPageTemplates">
                            @for (int i = 0; i < page.Templates.Count; i++)
                            {
                                string id = "trPageTemplate" + (i + 1).ToString();
                                string tid = page.Templates[i].TemplateID.ToString();
                                int children = page.Templates[i].CountChildren();
                                string desc = @page.Templates[i].Description + (children == 0 ? "" : " (+" + children + ")");
                                <tr id="@id" + page.Templates[i].TemplateID class="template ordered" data-template-id="@tid">
                                    <td>@Html.Hidden("Templates[" + i + "].TemplateID", page.Templates[i].TemplateID)
                                        @Html.Hidden("Templates[" + i + "].Description", page.Templates[i].Description)
                                        @Html.ActionLink(@desc, "Edit", "Template", new { id = page.Templates[i].TemplateID }, null)</td>
                                    <td><a href="#" class="ordered ordered-btn up" title="Move template up">Up</a></td>
                                    <td><a href="#" class="ordered ordered-btn down" title="Move template down">Down</a></td>
                                    <td><a href="#" class="ordered ordered-btn delete" title="Delete template">Delete</a></td>
                                </tr>
                            }
                        </tbody>
                        <tbody style="display:none">
                            <tr id="trPageTemplateXXX" class="template ordered">
                                <td>@Html.DropDownList("TemplateMasterListXXX", Model.Templates)</td>
                                <td><a href="#" class="ordered ordered-btn up" title="Move template up">Up</a></td>
                                <td><a href="#" class="ordered ordered-btn down" title="Move template down">Down</a></td>
                                <td><a href="#" class="ordered ordered-btn delete" title="Delete template">Delete</a></td>
                            </tr>
                        </tbody>
                    </table>
                    <a href="#" class="ordered ordered-btn add" title="Add template" style="display:inline-block;position:relative;top:-3px">Add</a>
                </td>
            </tr>
            <tr>
                <td class="lbl" style="vertical-align:top">Routing:</td>
                <td id="PageRouting" class="data">
                    @Html.Hidden("SelectedRoutes", page.SelectedRoutes)
                    <table style="display:inline">
                        <tbody id="tbodyPageRouting">
                            @for (int i = 0; i < page.Routing.Count; i++)
                            {
                                string id = "trPageRoute" + (i + 1).ToString();
                                string kcode = page.Routing[i].KeyCode.ToString();
                                string clsPage = (page.Routing[i].GoNextPage || page.Routing[i].GoNextFrame) ? "page-no route-disable" : "page-no";
                                string clsFrame = (page.Routing[i].GoNextPage || page.Routing[i].GoNextFrame) ? "frame route-disable" : "frame";
                                    <tr id="@id" + page.Routing[i].KeyCode class="route ordered" data-route-keycode="@kcode">
                                    <td>
                                        @Html.Hidden("Routing[" + i + "].KeyCode", page.Routing[i].KeyCode)
                                        @page.Routing[i].Description
                                    </td>
                                    <td>@Html.TextBox("Routing[" + i + "].NextPageNo", page.Routing[i].NextPageNo, new { @class = clsPage, maxlength = 10, style = "width:75px" })</td>
                                    <td>@Html.TextBox("Routing[" + i + "].NextFrame", page.Routing[i].NextFrame, new { @class = clsFrame, maxlength = 1, style = "width:15px;text-transform:lowercase" })</td>
                                    <td>@Html.CheckBox("Routing[" + i + "].GoNextPage", page.Routing[i].GoNextPage, new { @class = "next-page" })&nbsp;Next&nbsp;Page</td>
                                    <td>@Html.CheckBox("Routing[" + i + "].GoNextFrame", page.Routing[i].GoNextFrame, new { @class = "next-frame" })&nbsp;Next&nbsp;Frame</td>
                                    <td><a href="#" class="ordered ordered-btn delete" title="Delete route">Delete</a></td>
                                </tr>
                            }
                        </tbody>
                        <tbody style="display:none">
                            <tr id="trPageRouteXXX" class="route ordered">
                                <td>@Html.DropDownList("RouteMasterListXXX", Model.Routes)</td>
                                <td>@Html.TextBox("Routing_XXX.NextPageNo", "", new { @class = "page-no", maxlength = 10, style = "width:75px" })</td>
                                <td>@Html.TextBox("Routing_XXX.NextFrame", "", new { @class = "frame", maxlength = 1, style = "width:15px;text-transform:lowercase" })</td>
                                <td>@Html.CheckBox("Routing_XXX.GoNextPage", false, new { @class = "next-page" })&nbsp;Next&nbsp;Page</td>
                                <td>@Html.CheckBox("Routing_XXX.GoNextFrame", false, new { @class = "next-frame" })&nbsp;Next&nbsp;Frame</td>
                                <td><a href="#" class="ordered ordered-btn delete" title="Delete route">Delete</a></td>
                            </tr>
                        </tbody>
                    </table>
                    <a href="#" class="ordered ordered-btn add" title="Add route" style="display:inline-block;position:relative;top:-3px">Add</a>
                </td>
            </tr>
        </tbody>
    </table>
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <input type="submit" value="Save" name="action:Save" class="btn btn-primary" />
    <input type="submit" value="Delete" name="action:Delete" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this page?');" />
    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
}

@section head {
<link type="text/css" rel="stylesheet" href="~/Content/teletext.css" />
}

@section editor {
@Html.Partial("_Editor")
}

@section Scripts {
<script type="text/javascript" src="~/Scripts/teletext-editor.js"></script>
<script type="text/javascript" src="~/Scripts/editor.js"></script>
<script type="text/javascript">
    var nextID = 0;
    var checkingRoutes = false;

    $(document).ready(function () {
        $(".route-disable").each(function (index, textBox) {
            $(textBox).prop("disabled", "disabled");
        });
    });

    $("#PageTemplates .ordered-btn.add").click(function (event) {
        event.preventDefault();
        addTemplate(this);
    });

    $("#tbodyPageTemplates .ordered-btn.delete").click(function (event) {
        event.preventDefault();
        deleteTemplate(this);
    });

    $("#tbodyPageTemplates .ordered-btn.up").click(function (event) {
        event.preventDefault();
        moveTemplateUp(this);
    });

    $("#tbodyPageTemplates .ordered-btn.down").click(function (event) {
        event.preventDefault();
        moveTemplateDown(this);
    });

    $("#PageRouting .ordered-btn.add").click(function (event) {
        event.preventDefault();
        addRoute(this);
    });

    $("#tbodyPageRouting .ordered-btn.delete").click(function (event) {
        event.preventDefault();
        deleteRoute(this);
    });

    $("#tbodyPageRouting .next-page").click(function (event) {
        nextPageChecked(this);
    });

    $("#tbodyPageRouting .next-frame").click(function (event) {
        nextFrameChecked(this);
    });

    $("#tbodyPageRouting .page-no,#tbodyPageRouting .frame").change(function (event) {
        setSelectedRoutes(this);
    });

    function getNextID() {
        var rv = nextID - 1;
        nextID = rv;
        return rv.toString();
    }

    jQuery.fn.outerHTML = function (s) {
        return s
            ? this.before(s).remove()
            : jQuery("<div>").append(this.eq(0).clone()).html();
    };

    function addTemplate(btn) {
        var id = getNextID();
        var html = $("#trPageTemplateXXX").outerHTML().replace(/XXX/g, id);
        $("#tbodyPageTemplates").append(html);
        $("#trPageTemplate" + id + " .ordered-btn.delete").click(function (event) {
            event.preventDefault();
            deleteTemplate(this);
        });
        $("#trPageTemplate" + id + " .ordered-btn.up").click(function (event) {
            event.preventDefault();
            moveTemplateUp(this);
        });
        $("#trPageTemplate" + id + " .ordered-btn.down").click(function (event) {
            event.preventDefault();
            moveTemplateDown(this);
        });
        $("#trPageTemplate" + id + " select").change(function (event) {
            event.preventDefault();
            setSelectedTemplates();
        });
        setSelectedTemplates();
    }

    function deleteTemplate(btn) {
        var row = $(btn).parents("tr.template.ordered");
        $(row.remove());
        setSelectedTemplates();
    }

    function moveTemplateUp(btn) {
        var row = $(btn).parents("tr.template.ordered");
        var first = $("#tbodyPageTemplates tr:first-child")
        if (row !== first)
            $(row).insertBefore(row.prev());
        setSelectedTemplates();
    }

    function moveTemplateDown(btn) {
        var row = $(btn).parents("tr.template.ordered");
        var last = $("#tbodyPageTemplates tr:last-child")
        if (row !== last)
            $(row).insertAfter(row.next());
        setSelectedTemplates();
    }

    function setSelectedTemplates()
    {
        var val = "";
        var join = "";
        $("#tbodyPageTemplates tr").each(function (index, row) {
            var id = $(row).attr("id").replace(/trPageTemplate/g, "") * 1;
            if (id > 0) {
                var id = $(row).data("template-id") * 1;
                val += join + id.toString();
            } else {
                var id = $("#TemplateMasterList" + id.toString()).val();
                if (id > 0)
                    val += join + id.toString();
            }
            join = ",";
        });
        $("#SelectedTemplates").val(val);
    }

    function addRoute(btn) {
        var id = getNextID();
        var html = $("#trPageRouteXXX").outerHTML().replace(/XXX/g, id);
        $("#tbodyPageRouting").append(html);
        $("#trPageRoute" + id + " .ordered-btn.delete").click(function (event) {
            event.preventDefault();
            deleteRoute(this);
        });
        $("#trPageRoute" + id + " select").change(function (event) {
            event.preventDefault();
            setSelectedRoutes();
        });
        $("#trPageRoute" + id + " .next-page").change(function (event) {
            nextPageChecked(this);
        });
        $("#trPageRoute" + id + " .next-frame").change(function (event) {
            nextFrameChecked(this);
        });
        $("#trPageRoute" + id + " .page-no,#trPageRoute" + id + " .frame").change(function (event) {
            setSelectedRoutes(this);
        });
        setSelectedRoutes();
    }

    function deleteRoute(btn) {
        var row = $(btn).parents("tr.route.ordered");
        $(row.remove());
        setSelectedRoutes();
    }

    function nextPageChecked(ctrl) {
        if (checkingRoutes)
            return;
        checkingRoutes = true;
        var row = $(ctrl).parents("tr.route.ordered");
        var nextPage = $(row).find(".next-page").is(":checked");
        var nextFrame = $(row).find(".next-frame").is(":checked");
        if (nextPage)
            $(row).find(".next-frame").prop("checked", false);
        if (nextPage || nextFrame)
            $(row).find("input[type=text]").prop("disabled", "disabled");
        else
            $(row).find("input[type=text]").removeProp("disabled");
        checkingRoutes = false;
        setSelectedRoutes();
    }

    function nextFrameChecked(ctrl) {
        if (checkingRoutes)
            return;
        checkingRoutes = true;
        var row = $(ctrl).parents("tr.route.ordered");
        var nextPage = $(row).find(".next-page").is(":checked");
        var nextFrame = $(row).find(".next-frame").is(":checked");
        if (nextFrame)
            $(row).find(".next-page").prop("checked", false);     
        if (nextPage || nextFrame)
            $(row).find("input[type=text]").prop("disabled", "disabled");
        else
            $(row).find("input[type=text]").removeProp("disabled");
        checkingRoutes = false;
        setSelectedRoutes();
    }

    function setSelectedRoutes() {
        var val = "";
        var join = "";
        $("#tbodyPageRouting tr").each(function (index, row) {
            var id = $(row).attr("id").replace(/trPageRoute/g, "") * 1;
            if (id > 0)
                var keycode = $(row).data("route-keycode") * 1;
            else
                var keycode = $("#RouteMasterList" + id.toString()).val();
            var pageNo = $(row).find(".page-no").val();
            var frame = $(row).find(".frame").val();
            var goPage = $(row).find(".next-page").is(":checked");
            var goFrame = $(row).find(".next-frame").is(":checked");
            val += join + keycode.toString() + ";" + pageNo + ";" + frame + ";" + goPage + ";" + goFrame;
            join = ",";
        });
        $("#SelectedRoutes").val(val);
    }
    </script>
}
