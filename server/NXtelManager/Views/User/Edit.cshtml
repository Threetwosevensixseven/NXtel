@model UserEditModel
@using Microsoft.AspNet.Identity;
@using NXtelManager.Models
@{
    ViewBag.Title = "Edit User";
    string myID = (User.Identity as System.Security.Claims.ClaimsIdentity).GetUserID();
    int i = 0;
}
<h1>@ViewBag.Title</h1>
<h3>@ViewBag.Message</h3>

@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.HiddenFor(m => @Model.User.ID)
        @Html.HiddenFor(m => @Model.SelectedRolesJSON)
        @Html.LabelFor(m => @Model.User.Email, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            @Html.TextBoxFor(m => @Model.User.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => @Model.User.EmailConfirmed, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(m => @Model.User.EmailConfirmed)
                </label>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => @Model.User.Mailbox, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            @Html.TextBoxFor(m => @Model.User.Mailbox, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Roles", "Roles", new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            <select id="SelectedRoles" multiple="multiple">
                @foreach (var role in Model.Roles)
                {
                    string sel = Model.User.Roles.Any(r => r == role.Text) ? "selected=selected" : "";
                    <option value="@role.Text" @sel>@role.Text</option>
                    i++;
                }
            </select>
        </div>
    </div>
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <input type="submit" value="Save" name="action:Save" class="btn btn-primary" onclick="saveUser();" />
    if (!Model.User.IsAdmin && Model.User.ID != myID)
    {
        <input type="submit" value="Delete" name="action:DeleteItem" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this user?');" />
    }
    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#SelectedRoles').multiselect({
                nonSelectedText: 'None',
                allSelectedText: false,
                numberDisplayed: 0
            });
        });

        function saveUser() {
            $("#SelectedRolesJSON").val($("#SelectedRoles").val());
        }
    </script>
}